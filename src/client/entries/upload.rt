<rt-import name="List" from="../app/shared/components/list/list.component" />
<rt-import name="ListHeader" from="../app/shared/components/list/list.header.component" />
<rt-import name="DropZone" from="../app/shared/components/upload/dropzone.component" />
<rt-import name="SwitchInput" from="../app/shared/components/input/switch.component" />

<div class="container-fluid">
  <div class="row">
    <div class="col-md-10 col-md-offset-1">
      <h1>Importer des données</h1>
    </div>
  </div>
  <div class="row">
    <div class="col-md-4 col-md-offset-1">
      <h4>Importer un fichier</h4>
      <div class="form-horizontal">
        <DropZone width="100%" height="50px" onDrop="{ (file, data) => this.onDrop(file, data) }">
          <ul rt-if="this.state.file !== undefined">
            <li>{ this.state.file.name }</li>
          </ul>
        </DropZone>
        <span class="help-block">Cliquer ou faites glisser un fichier sur cette zone</span>
      </div>
      <form rt-if="this.state.file !== undefined" class="form-horizontal" onSubmit="{ e => this.accept(e) }">
        <hr/>
        <div class="form-group">
          <label for="id_field" class="col-sm-6 control-label">Clé : </label>
          <div class="col-sm-6">
            <select name="id_field">
              <rt-virtual rt-repeat="header in this.state.headers">
                <option value="{header}">{ header }</option>
              </rt-virtual>
            </select>
          </div>
        </div>
        <div class="form-group">
          <label for="label_field" class="col-sm-6 control-label">Étiquette : </label>
          <div class="col-sm-6">
            <select name="label_field">
              <rt-virtual rt-repeat="header in this.state.headers">
                <option value="{header}">{ header }</option>
              </rt-virtual>
            </select>
          </div>
        </div>
        <div class="form-group">
          <label for="projected" class="col-sm-6 control-label">Données projetées ?</label>
          <div class="col-sm-6">
            <SwitchInput name="projected"
                         onChange="{ e => console.log(e) }"
                         labelOn="X/Y"
                         labelOff="LON/LAT">
            </SwitchInput>
          </div>
        </div>
        <div class="form-group">
          <label for="x_field" class="col-sm-6 control-label">X :</label>
          <div class="col-sm-6">
            <select name="x_field">
              <rt-virtual rt-repeat="header in this.state.headers">
                <option value="{header}">{ header }</option>
              </rt-virtual>
            </select>
          </div>
        </div>
        <div class="form-group">
          <label for="y_field" class="col-sm-6 control-label">Y :</label>
          <div class="col-sm-6">
            <select name="y_field">
              <rt-virtual rt-repeat="header in this.state.headers">
                <option value="{header}">{ header }</option>
              </rt-virtual>
            </select>
          </div>
        </div>
        <hr/>
        <div class="form-group">
          <div class="col-md-6 col-md-offset-6">
            <button type="submit" class="btn btn-primary">Importer</button>
          </div>
        </div>
      </form>
    </div>
    <div class="col-md-6">
      <h4>Aperçu des données</h4>
      <List items="{ this.state.items }"
            renderItem="{ (item) => item.label }">
      </List>
    </div>
  </div>
</div>
